// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: chain/v1alpha1/chain.proto

package chainv1alpha1

import (
	//_ "github.com/finiteloopme/dcentral-labs/chain-data-stream/api/gen/google/type"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamType int32

const (
	StreamType_STREAM_TYPE_UNSPECIFIED    StreamType = 0
	StreamType_STREAM_TYPE_LOG_ONLY       StreamType = 1
	StreamType_STREAM_TYPE_BATCH_ONLY     StreamType = 2
	StreamType_STREAM_TYPE_REAL_TIME_ONLY StreamType = 3
	StreamType_STREAM_TYPE_BATCH_AND_RT   StreamType = 4
)

// Enum value maps for StreamType.
var (
	StreamType_name = map[int32]string{
		0: "STREAM_TYPE_UNSPECIFIED",
		1: "STREAM_TYPE_LOG_ONLY",
		2: "STREAM_TYPE_BATCH_ONLY",
		3: "STREAM_TYPE_REAL_TIME_ONLY",
		4: "STREAM_TYPE_BATCH_AND_RT",
	}
	StreamType_value = map[string]int32{
		"STREAM_TYPE_UNSPECIFIED":    0,
		"STREAM_TYPE_LOG_ONLY":       1,
		"STREAM_TYPE_BATCH_ONLY":     2,
		"STREAM_TYPE_REAL_TIME_ONLY": 3,
		"STREAM_TYPE_BATCH_AND_RT":   4,
	}
)

func (x StreamType) Enum() *StreamType {
	p := new(StreamType)
	*p = x
	return p
}

func (x StreamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamType) Descriptor() protoreflect.EnumDescriptor {
	return file_chain_v1alpha1_chain_proto_enumTypes[0].Descriptor()
}

func (StreamType) Type() protoreflect.EnumType {
	return &file_chain_v1alpha1_chain_proto_enumTypes[0]
}

func (x StreamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamType.Descriptor instead.
func (StreamType) EnumDescriptor() ([]byte, []int) {
	return file_chain_v1alpha1_chain_proto_rawDescGZIP(), []int{0}
}

type ChainConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`       // User specified, can be duplicate
	Chain      string     `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"` // Could be handled using Enum, though that limits how support for other chains could be handled
	StreamType StreamType `protobuf:"varint,3,opt,name=stream_type,json=streamType,proto3,enum=chain.v1alpha1.StreamType" json:"stream_type,omitempty"`
	WsUrl      string     `protobuf:"bytes,4,opt,name=ws_url,json=wsUrl,proto3" json:"ws_url,omitempty"`
	ApiKey     string     `protobuf:"bytes,5,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *ChainConfig) Reset() {
	*x = ChainConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_v1alpha1_chain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainConfig) ProtoMessage() {}

func (x *ChainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_chain_v1alpha1_chain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainConfig.ProtoReflect.Descriptor instead.
func (*ChainConfig) Descriptor() ([]byte, []int) {
	return file_chain_v1alpha1_chain_proto_rawDescGZIP(), []int{0}
}

func (x *ChainConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChainConfig) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *ChainConfig) GetStreamType() StreamType {
	if x != nil {
		return x.StreamType
	}
	return StreamType_STREAM_TYPE_UNSPECIFIED
}

func (x *ChainConfig) GetWsUrl() string {
	if x != nil {
		return x.WsUrl
	}
	return ""
}

func (x *ChainConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type StartChainReadingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *ChainConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *StartChainReadingRequest) Reset() {
	*x = StartChainReadingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_v1alpha1_chain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartChainReadingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChainReadingRequest) ProtoMessage() {}

func (x *StartChainReadingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chain_v1alpha1_chain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChainReadingRequest.ProtoReflect.Descriptor instead.
func (*StartChainReadingRequest) Descriptor() ([]byte, []int) {
	return file_chain_v1alpha1_chain_proto_rawDescGZIP(), []int{1}
}

func (x *StartChainReadingRequest) GetConfig() *ChainConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type StartChainReadingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // User specified.  Else use a random id
	BatchDataset string `protobuf:"bytes,2,opt,name=batch_dataset,json=batchDataset,proto3" json:"batch_dataset,omitempty"` // Empty if not available
	RtTopic      string `protobuf:"bytes,3,opt,name=rt_topic,json=rtTopic,proto3" json:"rt_topic,omitempty"`                // Empty if not available
}

func (x *StartChainReadingResponse) Reset() {
	*x = StartChainReadingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_v1alpha1_chain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartChainReadingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChainReadingResponse) ProtoMessage() {}

func (x *StartChainReadingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chain_v1alpha1_chain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChainReadingResponse.ProtoReflect.Descriptor instead.
func (*StartChainReadingResponse) Descriptor() ([]byte, []int) {
	return file_chain_v1alpha1_chain_proto_rawDescGZIP(), []int{2}
}

func (x *StartChainReadingResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StartChainReadingResponse) GetBatchDataset() string {
	if x != nil {
		return x.BatchDataset
	}
	return ""
}

func (x *StartChainReadingResponse) GetRtTopic() string {
	if x != nil {
		return x.RtTopic
	}
	return ""
}

var File_chain_v1alpha1_chain_proto protoreflect.FileDescriptor

var file_chain_v1alpha1_chain_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1a, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x3b,
	0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x77,
	0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x73, 0x55,
	0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x4f, 0x0a, 0x18, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x6b, 0x0a, 0x19,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x2a, 0x9d, 0x01, 0x0a, 0x0a, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x52, 0x45,
	0x41, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42,
	0x41, 0x54, 0x43, 0x48, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x53,
	0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48,
	0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x54, 0x10, 0x04, 0x32, 0x75, 0x0a, 0x13, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5e, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0xd7, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0a, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x6c, 0x6f, 0x6f, 0x70, 0x6d, 0x65, 0x2f, 0x64,
	0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0e, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x0e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x1a, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_chain_v1alpha1_chain_proto_rawDescOnce sync.Once
	file_chain_v1alpha1_chain_proto_rawDescData = file_chain_v1alpha1_chain_proto_rawDesc
)

func file_chain_v1alpha1_chain_proto_rawDescGZIP() []byte {
	file_chain_v1alpha1_chain_proto_rawDescOnce.Do(func() {
		file_chain_v1alpha1_chain_proto_rawDescData = protoimpl.X.CompressGZIP(file_chain_v1alpha1_chain_proto_rawDescData)
	})
	return file_chain_v1alpha1_chain_proto_rawDescData
}

var file_chain_v1alpha1_chain_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chain_v1alpha1_chain_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chain_v1alpha1_chain_proto_goTypes = []interface{}{
	(StreamType)(0),                   // 0: chain.v1alpha1.StreamType
	(*ChainConfig)(nil),               // 1: chain.v1alpha1.ChainConfig
	(*StartChainReadingRequest)(nil),  // 2: chain.v1alpha1.StartChainReadingRequest
	(*StartChainReadingResponse)(nil), // 3: chain.v1alpha1.StartChainReadingResponse
}
var file_chain_v1alpha1_chain_proto_depIdxs = []int32{
	0, // 0: chain.v1alpha1.ChainConfig.stream_type:type_name -> chain.v1alpha1.StreamType
	1, // 1: chain.v1alpha1.StartChainReadingRequest.config:type_name -> chain.v1alpha1.ChainConfig
	2, // 2: chain.v1alpha1.ChainReadingService.Start:input_type -> chain.v1alpha1.StartChainReadingRequest
	3, // 3: chain.v1alpha1.ChainReadingService.Start:output_type -> chain.v1alpha1.StartChainReadingResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chain_v1alpha1_chain_proto_init() }
func file_chain_v1alpha1_chain_proto_init() {
	if File_chain_v1alpha1_chain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chain_v1alpha1_chain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_v1alpha1_chain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartChainReadingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_v1alpha1_chain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartChainReadingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chain_v1alpha1_chain_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chain_v1alpha1_chain_proto_goTypes,
		DependencyIndexes: file_chain_v1alpha1_chain_proto_depIdxs,
		EnumInfos:         file_chain_v1alpha1_chain_proto_enumTypes,
		MessageInfos:      file_chain_v1alpha1_chain_proto_msgTypes,
	}.Build()
	File_chain_v1alpha1_chain_proto = out.File
	file_chain_v1alpha1_chain_proto_rawDesc = nil
	file_chain_v1alpha1_chain_proto_goTypes = nil
	file_chain_v1alpha1_chain_proto_depIdxs = nil
}
