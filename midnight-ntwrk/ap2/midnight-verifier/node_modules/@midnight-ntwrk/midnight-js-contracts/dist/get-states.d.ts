import type { PrivateStateProvider, PublicDataProvider, PrivateStateId } from '@midnight-ntwrk/midnight-js-types';
import type { ContractAddress, ZswapChainState } from '@midnight-ntwrk/ledger';
import type { ContractState } from '@midnight-ntwrk/compact-runtime';
/**
 * Object containing the publicly visible states of a contract.
 */
export type PublicContractStates = {
    /**
     * The (public) Zswap chain state of a contract.
     */
    readonly zswapChainState: ZswapChainState;
    /**
     * The (public) ledger state of a contract.
     */
    readonly contractState: ContractState;
};
/**
 * Object containing the publicly visible states of a contract and the private
 * state of a contract.
 */
export type ContractStates<PS> = PublicContractStates & {
    /**
     * The private state of a contract.
     */
    readonly privateState: PS;
};
/**
 * Fetches only the public visible (Zswap and ledger) states of a contract.
 *
 * @param publicDataProvider The provider to use to fetch the public states (Zswap and ledger)
 *                           from the blockchain.
 * @param contractAddress The ledger address of the contract.
 */
export declare const getPublicStates: (publicDataProvider: PublicDataProvider, contractAddress: ContractAddress) => Promise<PublicContractStates>;
/**
 * Retrieves the Zswap, ledger, and private states of the contract corresponding
 * to the given identifier using the given providers.
 *
 * @param publicDataProvider The provider to use to fetch the public states (Zswap and ledger)
 *                           from the blockchain.
 * @param privateStateProvider The provider to use to fetch the private state.
 * @param contractAddress The ledger address of the contract.
 * @param privateStateId The identifier for the private state of the contract.
 */
export declare const getStates: <PS>(publicDataProvider: PublicDataProvider, privateStateProvider: PrivateStateProvider<PrivateStateId, PS>, contractAddress: ContractAddress, privateStateId: PrivateStateId) => Promise<ContractStates<PS>>;
//# sourceMappingURL=get-states.d.ts.map