export declare const BLOCK_QUERY: import("@graphql-typed-document-node/core").TypedDocumentNode<import("./gen/graphql").BlockHashQueryQuery, import("./gen/graphql").Exact<{
    offset: import("./gen/graphql").InputMaybe<import("./gen/graphql").BlockOffset>;
}>>;
export declare const TX_ID_QUERY: import("@graphql-typed-document-node/core").TypedDocumentNode<import("./gen/graphql").TxIdQueryQuery, import("./gen/graphql").Exact<{
    offset: import("./gen/graphql").TransactionOffset;
}>>;
export declare const DEPLOY_TX_QUERY: import("@graphql-typed-document-node/core").TypedDocumentNode<import("./gen/graphql").DeployTxQueryQuery, import("./gen/graphql").Exact<{
    address: import("./gen/graphql").Scalars["HexEncoded"]["input"];
}>>;
export declare const DEPLOY_CONTRACT_STATE_TX_QUERY: import("@graphql-typed-document-node/core").TypedDocumentNode<import("./gen/graphql").DeployContractStateTxQueryQuery, import("./gen/graphql").Exact<{
    address: import("./gen/graphql").Scalars["HexEncoded"]["input"];
}>>;
export declare const LATEST_CONTRACT_TX_BLOCK_HEIGHT_QUERY: import("@graphql-typed-document-node/core").TypedDocumentNode<import("./gen/graphql").LatestContractTxBlockHeightQueryQuery, import("./gen/graphql").Exact<{
    address: import("./gen/graphql").Scalars["HexEncoded"]["input"];
}>>;
export declare const TXS_FROM_BLOCK_SUB: import("@graphql-typed-document-node/core").TypedDocumentNode<import("./gen/graphql").TxsFromBlockSubSubscription, import("./gen/graphql").Exact<{
    offset: import("./gen/graphql").InputMaybe<import("./gen/graphql").BlockOffset>;
}>>;
export declare const CONTRACT_STATE_QUERY: import("@graphql-typed-document-node/core").TypedDocumentNode<import("./gen/graphql").ContractStateQueryQuery, import("./gen/graphql").Exact<{
    address: import("./gen/graphql").Scalars["HexEncoded"]["input"];
    offset: import("./gen/graphql").InputMaybe<import("./gen/graphql").ContractActionOffset>;
}>>;
export declare const CONTRACT_STATE_SUB: import("@graphql-typed-document-node/core").TypedDocumentNode<import("./gen/graphql").ContractStateSubSubscription, import("./gen/graphql").Exact<{
    address: import("./gen/graphql").Scalars["HexEncoded"]["input"];
    offset: import("./gen/graphql").InputMaybe<import("./gen/graphql").BlockOffset>;
}>>;
export declare const CONTRACT_AND_ZSWAP_STATE_QUERY: import("@graphql-typed-document-node/core").TypedDocumentNode<import("./gen/graphql").BothStateQueryQuery, import("./gen/graphql").Exact<{
    address: import("./gen/graphql").Scalars["HexEncoded"]["input"];
    offset: import("./gen/graphql").InputMaybe<import("./gen/graphql").ContractActionOffset>;
}>>;
//# sourceMappingURL=query-definitions.d.ts.map