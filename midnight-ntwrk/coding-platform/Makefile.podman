# Podman-specific Makefile
# This file contains Podman-optimized commands

.PHONY: podman-info podman-build podman-push podman-login

# Show Podman information
podman-info:
	@echo "Podman Version:"
	@podman --version
	@echo ""
	@echo "Podman System Info:"
	@podman system info --format json | jq -r '.host.os, .host.arch, .host.kernel'

# Build with Podman-specific options
podman-build:
	@echo "Building with Podman (rootless mode)..."
	@podman build \
		--format docker \
		--layers \
		--pull-always \
		-t $(IMAGE_NAME):$(IMAGE_TAG) \
		docker/

# Push with Podman
podman-push: check-project
	@echo "Pushing with Podman..."
	@REGISTRY_URL=$$(cd terraform && terraform output -raw registry_url 2>/dev/null); \
	if [ -z "$$REGISTRY_URL" ]; then \
		echo "ERROR: Registry not found. Run 'make deploy' first"; \
		exit 1; \
	fi; \
	echo "Registry URL: $$REGISTRY_URL"; \
	podman tag $(IMAGE_NAME):$(IMAGE_TAG) $$REGISTRY_URL/$(IMAGE_NAME):$(IMAGE_TAG); \
	podman push \
		--creds=oauth2accesstoken:$$(gcloud auth print-access-token) \
		$$REGISTRY_URL/$(IMAGE_NAME):$(IMAGE_TAG)

# Login to GCR with Podman
podman-login:
	@echo "Configuring Podman for GCR..."
	@gcloud auth print-access-token | podman login -u oauth2accesstoken --password-stdin gcr.io
	@REGION=$$(cd terraform && terraform output -raw region 2>/dev/null || echo "us-central1"); \
	gcloud auth print-access-token | podman login -u oauth2accesstoken --password-stdin $$REGION-docker.pkg.dev

# Clean Podman images and cache
podman-clean:
	@echo "Cleaning Podman images and cache..."
	@podman rmi $(IMAGE_NAME):$(IMAGE_TAG) 2>/dev/null || true
	@podman system prune -f

# Run container locally with Podman for testing
podman-run:
	@echo "Running container locally with Podman..."
	@podman run -it --rm \
		-p 3000:3000 \
		-p 8080:8080 \
		-v $$(pwd)/docker/templates:/workspace/templates:Z \
		$(IMAGE_NAME):$(IMAGE_TAG)

# Export image as tarball (useful for offline transfer)
podman-save:
	@echo "Saving image to tarball..."
	@podman save -o midnight-workstation-$(IMAGE_TAG).tar $(IMAGE_NAME):$(IMAGE_TAG)
	@echo "Image saved to midnight-workstation-$(IMAGE_TAG).tar"

# Load image from tarball
podman-load:
	@echo "Loading image from tarball..."
	@podman load -i midnight-workstation-$(IMAGE_TAG).tar