# Cloud Build configuration for Terraform PLAN only
# Safe to run on pull requests as it doesn't make changes

substitutions:
  _TERRAFORM_VERSION: '1.9.8'
  _ENVIRONMENT: 'dev'
  _REGION: 'us-central1'
  _ZONE: 'us-central1-a'
  _PR_NUMBER: ''  # Set by trigger when running on PRs

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

steps:
  # Initialize Terraform
  - id: 'terraform-init'
    name: 'hashicorp/terraform:${_TERRAFORM_VERSION}'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd terraform
        terraform init \
          -backend-config="bucket=${PROJECT_ID}-terraform-state" \
          -backend-config="prefix=midnight-platform/${_ENVIRONMENT}" \
          -input=false

  # Validate configuration
  - id: 'terraform-validate'
    name: 'hashicorp/terraform:${_TERRAFORM_VERSION}'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd terraform
        echo "Running terraform validate..."
        terraform validate || { echo "Validation failed!"; exit 1; }
        echo "Validation passed!"
        echo "Checking formatting..."
        terraform fmt -check=true -diff || { echo "Format check failed! Run 'terraform fmt' to fix."; exit 1; }
        echo "Format check passed!"

  # Select workspace
  - id: 'terraform-workspace'
    name: 'hashicorp/terraform:${_TERRAFORM_VERSION}'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd terraform
        terraform workspace select ${_ENVIRONMENT} || terraform workspace new ${_ENVIRONMENT}

  # Create plan
  - id: 'terraform-plan'
    name: 'hashicorp/terraform:${_TERRAFORM_VERSION}'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd terraform
        terraform plan \
          -var="project_id=${PROJECT_ID}" \
          -var="environment=${_ENVIRONMENT}" \
          -var="region=${_REGION}" \
          -var="zone=${_ZONE}" \
          -out=tfplan.binary \
          -input=false
        
        # Create readable plan
        terraform show tfplan.binary > tfplan.txt
        
        echo "========================================="
        echo "Terraform Plan Summary:"
        echo "========================================="
        grep -E "^(Plan:|No changes|.*will be |.*must be)" tfplan.txt || echo "Review tfplan.txt for details"

  # Comment on PR if this is a PR build
  - id: 'comment-pr'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    env:
      - 'REPO_NAME=${REPO_NAME}'
      - 'BRANCH_NAME=${BRANCH_NAME}'
      - 'COMMIT_SHA=${COMMIT_SHA}'
    args:
      - '-c'
      - |
        if [ -n "${_PR_NUMBER}" ]; then
          echo "Adding plan summary to PR #${_PR_NUMBER}..."
          # This would integrate with GitHub/GitLab API
          # For now, just log the plan
          cat terraform/tfplan.txt
        fi

artifacts:
  objects:
    location: 'gs://${PROJECT_ID}-terraform-state/plans/${BUILD_ID}'
    paths:
      - 'terraform/tfplan.txt'
      - 'terraform/tfplan.binary'

timeout: '900s'

tags:
  - 'terraform-plan'
  - '${_ENVIRONMENT}'