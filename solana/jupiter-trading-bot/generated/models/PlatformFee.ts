/* tslint:disable */
/* eslint-disable */
/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit The rate limit is 150 requests / 60 seconds. If you need a higher rate limit, feel free to contact us on [#developer-support](https://discord.com/channels/897540204506775583/910250162402779146) on Discord.  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings 
 *
 * The version of the OpenAPI document: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlatformFee
 */
export interface PlatformFee {
    /**
     * 
     * @type {string}
     * @memberof PlatformFee
     */
    amount?: string;
    /**
     * 
     * @type {number}
     * @memberof PlatformFee
     */
    feeBps?: number;
}

/**
 * Check if a given object implements the PlatformFee interface.
 */
export function instanceOfPlatformFee(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PlatformFeeFromJSON(json: any): PlatformFee {
    return PlatformFeeFromJSONTyped(json, false);
}

export function PlatformFeeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformFee {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'feeBps': !exists(json, 'feeBps') ? undefined : json['feeBps'],
    };
}

export function PlatformFeeToJSON(value?: PlatformFee | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'feeBps': value.feeBps,
    };
}

